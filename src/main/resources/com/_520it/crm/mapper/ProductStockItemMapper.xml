<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.ProductStockItemMapper">
    <resultMap id="BaseResultMap" type="com._520it.crm.domain.ProductStockItem">
        <id column="id" property="id"/>
        <result column="vdate" property="vdate"/>
        <result column="costPrice" property="costPrice"/>
        <result column="amount" property="amount"/>
        <result column="totalPrice" property="totalPrice"/>
        <result column="specification" property="specification"/>
        <result column="warning_date" property="warningDate"/>
        <result column="safe_date" property="safeDate"/>
        <result column="employee_name" property="employeeName"/>
        <association property="product" javaType="com._520it.crm.domain.Product" columnPrefix="p_">
            <id property="id" column="id"></id>
            <result property="sn" column="sn"></result>
            <result property="name" column="name"></result>
            <result property="categoryName" column="category_name"></result>
            <result property="originName" column="origin_name"></result>
            <result property="brandName" column="brand_name"></result>
            <result property="ingredient" column="ingredient"></result>
            <result property="salePrice" column="salePrice"></result>
            <result property="vsalePrice" column="vsalePrice"></result>
            <result property="supplierName" column="supplier_name"></result>
        </association>
        <!--<result column="product_id" property="product.id" />-->
    </resultMap>
    <delete id="deleteByPrimaryKey">
    delete from productstockitem
    where id = #{id}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    insert into productstockitem (vdate, costPrice,amount,totalPrice,specification,warning_date, safe_date, employee_name,
      product_id)
    values (#{vdate}, #{costPrice}, #{amount},#{totalPrice},#{specification},#{warningDate}, #{safeDate}, #{employeeName},
      #{product.id})
  </insert>
    <update id="updateByPrimaryKey">
    update productstockitem
    set vdate = #{vdate},
      costPrice = #{costPrice},
      amount = #{amount},
      totalPrice = #{totalPrice},
      specification, = #{specification,},
      warning_date = #{warningDate},
      safe_date = #{safeDate},
      employee_name = #{employeeName},
      product_id = #{product.id}
    where id = #{id}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, vdate, costPrice, amount,totalPrice,specification,,warning_date, safe_date, employee_name,
    product_id
    from productstockitem
    where id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, vdate, costPrice,amount,totalPrice,specification,,warning_date, safe_date, employee_name,
    product_id
    from productstockitem
  </select>
    <sql id="baseColumns">
            psk.id,
            psk.vdate,
            psk.costPrice,
            psk.amount,
            psk.totalPrice,
            psk.specification,
            psk.warning_date,
            psk.safe_date,
            psk.employee_name,
            psk.product_id,
            p.id p_id,
            p.sn p_sn,
            p.category_name p_category_name,
            p.origin_name p_origin_name,
            p.brand_name p_brand_name,
            p.ingredient p_ingredient,
            p.sale_price p_salePrice,
            p.vsale_price p_vsalePrice,
            p.supplier_name p_supplier_name,
            p.name p_name
    </sql>
    <sql id="baseWhere">
        <where>
            <if test="productSn!=null or productName!=null">
                 and ( p.sn like concat('%',#{productSn},'%') or p.name like concat('%',#{productName},'%'))
           </if>
        </where>
    </sql>


    <select id="queryPageData" resultMap="BaseResultMap">
        select
        <include refid="baseColumns"></include>
        from productstockitem psk join product p on psk.product_id=p.id
        <include refid="baseWhere"></include>
        limit #{start},#{rows}
    </select>
    <select id="queryPageCount" resultType="long">
        select count(psk.id)
        from productstockitem psk join product p on psk.product_id=p.id
        <include refid="baseWhere"></include>
    </select>

    <!--==========================-->
    <sql id="baseWhere_two">
        <where>
            <if test="productSn!=null">
               p.sn=#{productSn}
            </if>
        </where>
    </sql>
    <!--===========================-->
    <select id="queryPageSnData" resultMap="BaseResultMap">
        select
        <include refid="baseColumns"></include>
        from productstockitem psk join product p on psk.product_id=p.id
        <include refid="baseWhere_two"></include>
        limit #{start},#{rows}
    </select>
    <select id="queryPageSnCount" resultType="long">
        select count(psk.id)
        from productstockitem psk join product p on psk.product_id=p.id
        <include refid="baseWhere_two"></include>
    </select>

</mapper>